#!/usr/bin/env node
var debug = require('debug')('game');
var app = require('../app');


app.set('port', process.env.PORT || 3000);

var server = app.listen(app.get('port'), function() {
  // console.log('Express server listening on port ' + server.address().port)
  debug('Express server listening on port ' + server.address().port);  

});

var clients = 0
var movers = []
var canvas_width = 700
var canvas_height = 400

var io = require('socket.io').listen(server);
io.sockets.on('connection', function(socket) {
  
var updatePlayer = function(player) {
  
  for(var i = 0 ; i < movers.length; i++) {
          if (movers[i].client_id == player.client_id) {
            movers[i] = player
          }
      }

}


  socket.emit('connected', socket.id, movers);

  clients += 1;
  console.log(socket.id)
  console.log(clients + "connected")
  // socket.on('move', function(direction) {
  //   socket.broadcast.emit('move', direction);
  // });

  socket.on("new_game", function(player) {
    socket.broadcast.emit('new_game', [player]);
    movers.push(player)
  });

  socket.on("playerposition", function(player) {
    // movers 
    socket.broadcast.emit('playerposition', player); 
    console.log("here")
    updatePlayer(player);
  });

  socket.on("new_player", function(new_player) {
    socket.broadcast.emit('new_player', new_player);
    movers.push(new_player)
  });

  socket.on("bullet", function(bullet) {
    socket.broadcast.emit('bullet', bullet);
    movers.push(bullet)
  });



  socket.on('disconnect', function () {
    // console.log('client disconnected');
    // console.log(socket.id)
    // console.log("***" + movers)
    if (movers) {
      for(var i = 0 ; i < movers.length; i++) {
          if (movers[i].client_id == socket.id) {
            movers.splice(i,1)
            socket.broadcast.emit('player_removed', socket.id);
          }
      }
    }
    clients -= 1;
  });
})

function removePlayer(player_id) {
  for(var i = 0; i < movers.length; i ++) {
    if(movers[i].client_id == player_id){
      movers.splice(i,1);
    }
  }
}


// function updateMovers() {
//       for (var i = 0 ; i < movers.length; i ++) { 
//         movers[i].x = Math.min(Math.max(movers[i].x + movers[i].speedx,0),400 -movers[i].w)
//         movers[i].y = Math.min(Math.max(movers[i].y + movers[i].speedy,0),400 -movers[i].h)
//       }
//   }
  

function updateMovers() {
      // var oldx = movers[0].x
      // var oldy = movers[0].y
       for (var i = 0 ; i < movers.length; i ++) { 
        movers[i].x = Math.min(Math.max(movers[i].x + movers[i].speedx,0),canvas_width - movers[i].w )
        movers[i].y = Math.min(Math.max(movers[i].y + movers[i].speedy,0),canvas_height - movers[i].h )

        if (movers[i].client_id.substring(0,6) == "bullet") {
           if(movers[i].x == 0 || movers[i].x == (canvas_width - movers[i].w) || movers[i].y == 0 || movers[i].y == (canvas_height - movers[i].w) ) {
                removePlayer(movers[i].client_id)
                shots = 0
           }
        }
      }
  }
  






var times_per_second = 60
setInterval(function(){
    // console.log("hi")
    updateMovers();
}, 1000 / times_per_second)
